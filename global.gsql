CREATE VERTEX Comment(PRIMARY_ID id UINT, creationDate DATETIME, locationIP STRING, browserUsed STRING, content STRING, length UINT) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="TRUE"
CREATE VERTEX Post(PRIMARY_ID id UINT, imageFile STRING, creationDate DATETIME, locationIP STRING, browserUsed STRING, language STRING, content STRING, length UINT) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="TRUE"
CREATE VERTEX Company(PRIMARY_ID id UINT, name STRING, url STRING) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="TRUE"
CREATE VERTEX University(PRIMARY_ID id UINT, name STRING, url STRING) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="TRUE"
CREATE VERTEX City(PRIMARY_ID id UINT, name STRING, url STRING) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="TRUE"
CREATE VERTEX Country(PRIMARY_ID id UINT, name STRING, url STRING) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="TRUE"
CREATE VERTEX Continent(PRIMARY_ID id UINT, name STRING, url STRING) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="TRUE"
CREATE VERTEX Forum(PRIMARY_ID id UINT, title STRING, creationDate DATETIME) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="TRUE"
CREATE VERTEX Person(PRIMARY_ID id UINT, firstName STRING, lastName STRING, gender STRING, birthday DATETIME, creationDate DATETIME, locationIP STRING, browserUsed STRING, speaks SET<STRING>, email SET<STRING>) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="TRUE"
CREATE VERTEX Tag(PRIMARY_ID id UINT, name STRING, url STRING) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="TRUE"
CREATE VERTEX TagClass(PRIMARY_ID id UINT, name STRING, url STRING) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="TRUE"
CREATE DIRECTED EDGE CONTAINER_OF(FROM Forum, TO Post, creationDate DATETIME) WITH REVERSE_EDGE="CONTAINER_OF_REVERSE"
CREATE DIRECTED EDGE HAS_CREATOR(FROM Comment, TO Person|FROM Post, TO Person, creationDate DATETIME) WITH REVERSE_EDGE="HAS_CREATOR_REVERSE"
CREATE DIRECTED EDGE HAS_INTEREST(FROM Person, TO Tag, creationDate DATETIME) WITH REVERSE_EDGE="HAS_INTEREST_REVERSE"
CREATE DIRECTED EDGE HAS_MEMBER(FROM Forum, TO Person, creationDate DATETIME) WITH REVERSE_EDGE="HAS_MEMBER_REVERSE"
CREATE DIRECTED EDGE HAS_MODERATOR(FROM Forum, TO Person, creationDate DATETIME) WITH REVERSE_EDGE="HAS_MODERATOR_REVERSE"
CREATE DIRECTED EDGE HAS_TAG(FROM Comment, TO Tag|FROM Post, TO Tag|FROM Forum, TO Tag, creationDate DATETIME) WITH REVERSE_EDGE="HAS_TAG_REVERSE"
CREATE DIRECTED EDGE HAS_TYPE(FROM Tag, TO TagClass) WITH REVERSE_EDGE="HAS_TYPE_REVERSE"
CREATE DIRECTED EDGE IS_LOCATED_IN(FROM Comment, TO Country|FROM Company, TO Country|FROM University, TO City|FROM Post, TO Country|FROM Person, TO City) WITH REVERSE_EDGE="IS_LOCATED_IN_REVERSE"
CREATE DIRECTED EDGE IS_PART_OF(FROM Country, TO Continent|FROM City, TO Country) WITH REVERSE_EDGE="IS_PART_OF_REVERSE"
CREATE DIRECTED EDGE IS_SUBCLASS_OF(FROM TagClass, TO TagClass) WITH REVERSE_EDGE="IS_SUBCLASS_OF_REVERSE"
CREATE UNDIRECTED EDGE KNOWS(FROM Person, TO Person, creationDate DATETIME)
CREATE DIRECTED EDGE LIKES(FROM Person, TO Comment|FROM Person, TO Post, creationDate DATETIME) WITH REVERSE_EDGE="LIKES_REVERSE"
CREATE DIRECTED EDGE REPLY_OF(FROM Comment, TO Comment|FROM Comment, TO Post, creationDate DATETIME) WITH REVERSE_EDGE="REPLY_OF_REVERSE"
CREATE DIRECTED EDGE STUDY_AT(FROM Person, TO University, classYear INT, creationDate DATETIME) WITH REVERSE_EDGE="STUDY_AT_REVERSE"
CREATE DIRECTED EDGE WORK_AT(FROM Person, TO Company, workFrom INT, creationDate DATETIME) WITH REVERSE_EDGE="WORK_AT_REVERSE"
CREATE UNDIRECTED EDGE WEIGHT_DOUBLE(FROM Person, TO Person, weight DOUBLE)
